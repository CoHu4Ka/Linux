# Лабораторная работа: Основы работы в Linux (с использованием MSYS2/MSYS32)

Этот README файл представляет собой отчёт по лабораторной работе, выполненной в MSYS2/MSYS32. Он включает теоретическую часть, практическую часть с командами и местами для вставки скриншотов, а также вывод. Для завершения отчёта вставьте скриншоты из окна MSYS32 в указанные места и добавьте свои описания результатов.

---

## Теоретическая часть

### Подготовка среды (MSYS2 / MSYS32)
MSYS2 (или MSYS32 для 32-битной версии) — это эмулятор Linux-окружения для Windows, который позволяет работать с Unix-подобными командами. Перед началом работы необходимо обновить систему и установить необходимые пакеты для выполнения команд.

### Раздел 1: Структура файловой системы
В Linux файловая система организована в виде иерархии каталогов, начиная с корня `/`. Основные каталоги: `/bin` (бинарные файлы), `/etc` (конфигурационные файлы), `/usr` (пользовательские программы), `/home` (домашние директории пользователей). В MSYS32 структура имитирует Linux, но может отличаться из-за эмуляции.

### Раздел 2: Базовые команды
Базовые команды позволяют работать с файлами и директориями: `mkdir` (создать директорию), `cd` (сменить директорию), `pwd` (показать текущий путь), `echo` (вывести текст), `cp` (копировать), `mv` (переместить/переименовать), `ls` (список файлов), `rm` (удалить), `rmdir` (удалить пустую директорию).

### Раздел 3: Пользователи и права
В Linux права доступа к файлам обозначаются как `rwx` (чтение, запись, выполнение) для владельца, группы и остальных. Команды: `touch` (создать файл), `ls -l` (показать детали), `chmod` (изменить права), `chown` (изменить владельца). В MSYS32 управление пользователями ограничено.

### Раздел 4: Процессы
Процессы — это выполняющиеся программы. Команды: `ps` (список процессов), `top` (мониторинг), `kill` (завершить процесс), `&` (запустить в фоне).

### Раздел 5: grep, sed, awk
- `grep`: Поиск строк в файлах (опции: `-i` для игнора регистра, `-v` для инверсии).
- `sed`: Редактирование текста (замена, удаление строк).
- `awk`: Обработка данных в колонках (печать полей, фильтрация).

---

## Практическая часть

### Подготовка среды (MSYS2 / MSYS32)
1. Запуск MSYS32 (или MSYS2).
2. Обновиление системы командой:
   ```
   pacman -Syu
   ```

3. Установка пакетов:
   ```
   pacman -S coreutils util-linux grep sed gawk tree
   ```

   Описание пакетов:
   - `coreutils`: Основные команды (ls, cp, mv, rm и др.).
   - `tree`: Визуализация структуры каталогов.
   - `gawk`: Версия awk.
   - `grep`, `sed`: Инструменты для обработки текста.

### Раздел 1: Структура файловой системы
1. Выполненим команды:
   ```
   ls /
   tree -L 1 /
   ```


2. Посмотрим содержимое каталогов:
   ```
   ls /bin
   ls /etc
   ls /usr
   ls /home
   ```

   ![Часть 1][screens/1.jpg]

### Раздел 2: Базовые команды
1. Выполним последовательность:
   ```
   mkdir testdir
   cd testdir
   pwd
   echo "Пример текста" > file1.txt
   cp file1.txt copy.txt
   mv copy.txt moved.txt
   ls -l
   rm moved.txt
   cd ..
   rmdir testdir
   ```

   ![Часть 2][screens/2.jpg]

   Вывод `ls -l`: [Вставьте текст вывода или опишите].

   Объяснение:
   - `mkdir`: Создал директорию testdir.
   - `cd`: Перешёл в testdir.
   - `pwd`: Показал текущий путь.
   - `echo >`: Создал файл file1.txt с текстом.
   - `cp`: Скопировал в copy.txt.
   - `mv`: Переименовал в moved.txt.
   - `ls -l`: Показал список с деталями.
   - `rm`: Удалил файл.
   - `cd ..`: Вернулся назад.
   - `rmdir`: Удалил директорию.

### Раздел 3: Пользователи и права
1. Выполним:
   ```
   touch myfile.txt
   ls -l myfile.txt
   chmod 744 myfile.txt
   ls -l myfile.txt
   ```

   ![Часть 3][screens/3.jpg]

### Раздел 4: Процессы
1. Посмотрим процессы:
   ```
   ps aux | head
   top
   ```

2. Завершим процесс:
   ```
   sleep 100 &
   ps
   kill <PID>  # Замените <PID> на реальный ID
   ```

   ![Часть 4][Screens/4.jpg]

### Раздел 5: grep, sed, awk
1. Создадим файл:
   ```
   echo -e "Linux\nUnix\nWindows\nLinux Rocks\ndebug\nerror\nwarning" > sample.txt
   ```

2. grep:
   ```
   grep "error" sample.txt
   grep -i "linux" sample.txt
   grep -v "debug" sample.txt
   ```

3. sed:
   ```
   sed 's/Linux/Unix/g' sample.txt
   sed -i 's/Unix/Linux/g' sample.txt
   sed '/^$/d' sample.txt
   ```

4. awk:
   ```
   echo -e "user1 50\nuser2 150\nuser3 90" > data.txt
   awk '{print $1, $2}' data.txt
   awk '$2 > 100 {print $1}' data.txt
   ```

   ![Часть 5.1][screens/5.1.jpg]
   ![Часть 5.2][screens/5.2.jpg]

   Объяснение:
   - Файлы: sample.txt и data.txt с указанным содержимым.
   - grep: Ищет строки; -i игнорирует регистр; -v инвертирует.
   - sed: Заменяет текст; -i редактирует файл; удаляет пустые строки.
   - awk: Печатает поля; фильтрует по условию.

---

## Вывод
В ходе лабораторной работы я узнал [опишите, что вы узнали, например: основы команд Linux в эмуляторе MSYS32]. Полезными показались команды [перечислите, например: grep для поиска, chmod для прав]. Новым было [например: работа с процессами и awk для обработки данных].
